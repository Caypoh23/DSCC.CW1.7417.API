{
  "openapi": "3.0.1",
  "info": {
    "title": "DSCC._7417.API",
    "description": "An ASP.NET Core Web API for DSCC",
    "contact": {
      "name": "00007417",
      "url": "https://github.com/Caypoh23/DSCC.CW1.7417.API"
    },
    "version": "v1"
  },
  "paths": {
    "/api/Categories": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Gets the list of all Categories.",
        "responses": {
          "200": {
            "description": "List of categories are successfully returned"
          }
        }
      },
      "post": {
        "tags": [
          "Categories"
        ],
        "summary": "Creates a Category.",
        "description": "Sample request:\r\n            \r\n    POST /Categories\r\n    {\r\n       \"id\": {id},\r\n       \"CategoryName\": \"Category Name\"\r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the newly created category",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "400": {
            "description": "If the category is null",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Categories/{id}": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Gets a single category details.",
        "description": "Sample request:\r\n            \r\n    GET /Categories/id\r\n    {\r\n       \"id\": {id}\r\n    }",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "Categories"
        ],
        "summary": "Edits a Category.",
        "description": "Sample request:\r\n            \r\n    PUT /Categories/id\r\n    {\r\n       \"id\": {id},\r\n       \"CategoryName\": \"Modified Category Name\",\r\n    }",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the edited category"
          },
          "400": {
            "description": "If the category is null",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Categories"
        ],
        "summary": "Removes a category from Database.",
        "description": "Sample request:\r\n            \r\n    DELETE /Categories/id\r\n    {\r\n       \"id\": {id}\r\n    }",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returns the deleted Category",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "400": {
            "description": "If the category is null",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Products": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Gets the list of all Products.",
        "responses": {
          "200": {
            "description": "List of Products are successfully returned"
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Create a new Product.",
        "description": "Sample request:\r\n            \r\n    POST /Products\r\n    {\r\n       \"ProductName\": \"Product Name\",\r\n       \"Description\": \"Product Description\",\r\n       \"CategoryId\": \"{categoryId}\",\r\n       \"Price\": \"5.99\"\r\n       \r\n    }",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns a newly created product",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "If the product is null",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Products/{id}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Gets a single product details.",
        "description": "Sample request:\r\n            \r\n    GET /Products/id\r\n    {\r\n       \"id\": {id}\r\n    }",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "Products"
        ],
        "summary": "Edits a Product.",
        "description": "Sample request:\r\n            \r\n    PUT /Products/id\r\n    {\r\n       \"id\": {id},\r\n       \"ProductName\": \"Product Name\",\r\n       \"Description\": \"Modified Product Description\",\r\n       \"CategoryId\": \"{categoryId}\",\r\n       \"Price\": \"5.99\"\r\n       \r\n    }",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the edited product"
          },
          "400": {
            "description": "If the product is null",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Removes a product from Database.",
        "description": "Sample request:\r\n            \r\n    DELETE /Products/id\r\n    {\r\n       \"id\": {id}\r\n    }",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returns the deleted product",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "If the product is null",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Products/Categories": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Gets the list of all Categories.",
        "responses": {
          "200": {
            "description": "Categories were successfully returned"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Category": {
        "required": [
          "categoryName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "categoryName": {
            "minLength": 2,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "Product": {
        "required": [
          "price",
          "productName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "productName": {
            "minLength": 2,
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "productCategory": {
            "$ref": "#/components/schemas/Category"
          },
          "price": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      }
    }
  }
}